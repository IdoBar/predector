process {

  // TODO nf-core: Check the defaults for all processes
  cpus = { check_max( 1 * task.attempt, 'cpus' ) }
  memory = { check_max( 4.GB * task.attempt, 'memory' ) }
  time = { check_max( 2.h * task.attempt, 'time' ) }

  errorStrategy = { task.exitStatus in [143,137,104,134,139] ? 'retry' : 'finish' }
  maxRetries = 1
  maxErrors = '-1'

  withLabel:process_low {
    cpus = { check_max( 1 * task.attempt, 'cpus' ) }
    memory = { check_max( 2.GB * task.attempt, 'memory' ) }
    time = { check_max( 2.h * task.attempt, 'time' ) }
  }
  withLabel:process_medium {
    cpus = { check_max( 4 * task.attempt, 'cpus' ) }
    memory = { check_max( 8.GB * task.attempt, 'memory' ) }
    time = { check_max( 8.h * task.attempt, 'time' ) }
  }
  withLabel:process_high {
    cpus = { check_max( 4 * task.attempt, 'cpus' ) }
    memory = { check_max( 8.GB * task.attempt, 'memory' ) }
    time = { check_max( 10.h * task.attempt, 'time' ) }
  }

  withLabel: apoplastp {
    container = { make_image_name("apoplastp")  }
  }

  withLabel: deeploc {
    container = { make_image_name("deeploc")  }
  }

  withLabel: deepsig {
    container = { make_image_name("deepsig")  }
  }

  withLabel: effectorp1 {
    container = { make_image_name("effectorp1")  }
  }

  withLabel: effectorp2 {
    container = { make_image_name("effectorp2")  }
  }

  withLabel: emboss {
    container = { make_image_name("emboss")  }
  }

  withLabel: ffdb {
    container = { make_image_name("ffdb")  }
  }

  withLabel: localizer {
    container = { make_image_name("localizer")  }
  }

  withLabel: mmseqs {
    container = { make_image_name("mmseqs")  }
  }

  withLabel: phobius {
    container = { make_image_name("phobius")  }
  }

  withLabel: python3 {
    container = { make_image_name("python3")  }
  }

  withLabel: signalp3 {
    container = { make_image_name("signalp3")  }
  }

  withLabel: signalp4 {
    container = { make_image_name("signalp4")  }
  }

  withLabel: signalp5 {
    container = { make_image_name("signalp5")  }
  }

  withLabel: targetp {
    container = { make_image_name("targetp")  }
  }

  withLabel: tmhmm {
    container = { make_image_name("tmhmm")  }
  }
}

params {
  // Defaults only, expecting to be overwritten
  max_memory = 8.GB
  max_cpus = 4
  max_time = 24.h
}
